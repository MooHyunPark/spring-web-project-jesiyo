<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Document</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" type="text/css" href="/css/nav.css">
    <link rel="stylesheet" type="text/css" href="/css/header.css">
    <link rel="stylesheet" href="/css/myPage.css">
</head>
<body>



{{>layout/header}}
    <div class="container d-flex mt-5">
        {{>layout/mypage-menu}}
      <div class="box">
        <div class="title-box">
          <h2>낙찰된 물품(구매)</h2>
        </div>
        <div class="item-list mt-5">

            {{#models}}
                <div class="card mb-3">
                    <div class="card-image">
                        <img src="{{goodsImgUrl}}" class="card-img-top" />
                    </div>
                    <div class="card-body mt-2">
                        <h4 class="card-title">{{title}}</h4>
                        <div class="card-text mt-2">
                            <input type="hidden" name="id" id="{{id}}" />
                            <div>판매자 : {{sellerName}}</div>
                            <div>카테고리 : {{categoryName}}</div>
                            <div>낙찰가 : {{successPrice}}원</div>
                            <div>송장번호 확인 : {{deliveryNum}}</div>
                            {{#auctionSuccess}}
                                최종 거래가 완료 되었습니다
                            {{/auctionSuccess}}
                            {{^auctionSuccess}}
                                {{#depositMoneyToSeller}}
                                    관리자에 의해 판매자에게 입찰금이 전달되었습니다
                                {{/depositMoneyToSeller}}
                                {{^depositMoneyToSeller}}
                                    {{#auctionCancel}}
                                        관리자에 의해 경매가 취소되었습니다
                                    {{/auctionCancel}}
                                    {{^auctionCancel}}
                                        {{#reporting}}
                                            신고가 접수되어 처리 중 입니다
                                        {{/reporting}}
                                        {{^reporting}}
                                            <div>
                                                <!-- transactionStatus = true일때만 구매 취소 문구가 보이도록 -->
                                                {{#transactionStatus}}
                                                    구매 취소됨
                                                {{/transactionStatus}}
                                            </div>
                                            <div class="btn-group mt-1">
                                                {{^transactionStatus}}
                                                    {{^buyerStatus}} <!-- buyerStatus = false일때만 구매 확정 버튼이 보이도록 -->
                                                        <button type="button" class="btn btn-custom btn-sm" onclick="confirmBuy({{id}})">
                                                            구매 확정
                                                        </button>
                                                    {{/buyerStatus}}
                                                    <button type="button" class="btn btn-custom btn-sm" onclick="cancelBuy({{id}})">
                                                        구매 취소
                                                    </button>
                                                    <button type="button" class="btn btn-custom btn-sm"
                                                            onclick="reportSeller({{id}})"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#myModal">
                                                        판매자 신고
                                                    </button>
                                                {{/transactionStatus}}
                                            </div>
                                        {{/reporting}}
                                    {{/auctionCancel}}
                                {{/depositMoneyToSeller}}
                            {{/auctionSuccess}}
                        </div>
                    </div>
                </div>
            {{/models}}
            {{>layout/paging}}
        </div>
      </div>
    </div>

    <!-- 신고하기 모달창 -->
    <div class="modal" id="myModal">
      <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content" style="padding: 20px">
    
          <!-- Modal Header -->
          <div class="modal-header">
            <h4 class="modal-title">신고하기</h4>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
    
          <!-- Modal body -->
<!--          <form action="/s/report-seller" method="post">-->
              <input type="text" class="modal-body" id="reportContent" name="reportContent"
                     placeholder="신고내용을 작성해주세요." style="resize: none;" required>
              <!-- 숨겨진 필드에 sellerId 설정 -->
              <input type="hidden" id="reportSellerId" name="sellerId">

              <!-- Modal footer -->
              <div class="modal-footer" style="margin-top: 30px">
                  <button type="button" class="btn btn-danger" data-bs-dismiss="modal">취소</button>
                  <button type="submit" class="btn btn-danger" data-bs-dismiss="modal" onclick="report_seller()">신고하기</button>
              </div>
<!--          </form>-->

        </div>
      </div>
    </div>

    <script>



        // 구매 확정하기
        function confirmBuy(transactionId) {
            if (confirm('구매를 확정하시겠습니까?')) {
                fetch('/s/buyerStatus/update', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        transactionId: transactionId,
                        buyerStatus: 1
                    })
                }).then(response => {
                    if (response.ok) {
                        alert('구매가 확정되었습니다.');
                        location.reload();
                    } else {
                        // alert('구매 확정에 실패했습니다.');
                        response.text().then(text => alert('구매 확정에 실패했습니다: ' + text));
                    }
                });
            }
        }

        // 구매 취소하기
        function cancelBuy(transactionId) {
            if (confirm('구매를 취소하시겠습니까?')) {
                fetch('/s/transactionStatusForBuyer/update', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        transactionId: transactionId,
                        transactionStatus: 2
                    })
                }).then(response => {
                    if (response.ok) {
                        alert('구매가 취소되었습니다.');
                        location.reload();
                    } else {
                        alert('구매 취소에 실패했습니다.');
                    }
                });
            }
        }

        let transaction_id=""
        // 판매자 신고를 위한 모달창에 해당 물품 구매자의 buyerId값 넣기
        function reportSeller(transactionId){
            transaction_id = transactionId;
        }

        // 신고하기
        async function report_seller() {
            let reportContent = document.getElementById('reportContent').value;
            console.log(transaction_id);
            console.log(reportContent);

            let url = `/api/v1/report`;
            let response = await fetch(url, {
                method: 'Post',
                headers: {
                    'Content-Type': 'application/json',
                },
                body : JSON.stringify({
                    transactionId: transaction_id,
                    reason : reportContent
                })
            })
            let responseData = await response.json();
            if (!responseData.success) {
                alert(responseData.msg);
            }else {
                window.location.href =`/s/mypage-participated-auction`;
            }

        }

        function changePage(pageNumber) {
            window.location.href = `/s/mypage-participated-auction?page=${pageNumber}`;
        }
    </script>

    {{>layout/footer}}
  </body>
</html>